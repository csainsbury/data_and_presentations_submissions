logitPlotFrame <- as.data.frame(matrix(0,nrow=0, ncol=2))
colnames(logitPlotFrame) <- c("time", "estimate")
logitPlotFrame <- rbind(logitPlotFrame, reportFrame)
logitPlotFrame
colnames(reportFrame) <- c("time", "estimate")
# logisitc regression loop:
logitPlotFrame <- as.data.frame(matrix(0,nrow=0, ncol=2))
colnames(logitPlotFrame) <- c("time", "estimate")
for (i in seq(1,24,0.1)) {
insulin_at_i_y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=(i/12),1,0)
logitRegression<-glm(insulin_at_i_y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
reportFrame <- data.frame(i, logitRegression$coefficients[2])
colnames(reportFrame) <- c("time", "estimate")
logitPlotFrame <- rbind(logitPlotFrame, reportFrame)
}
logitPlotFrame[1,]
plot(logitPlotFrame$time, logitPlotFrame$estimate)
logitPlotFrame
# logisitc regression loop:
logitPlotFrame <- as.data.frame(matrix(0,nrow=0, ncol=2))
colnames(logitPlotFrame) <- c("time", "estimate")
for (i in seq(0,24,0.01)) {
insulin_at_i_y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=(i/12),1,0)
logitRegression<-glm(insulin_at_i_y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
reportFrame <- data.frame(i, logitRegression$coefficients[2])
colnames(reportFrame) <- c("time", "estimate")
logitPlotFrame <- rbind(logitPlotFrame, reportFrame)
}
plot(logitPlotFrame$time, logitPlotFrame$estimate)
plot(logitPlotFrame$time, logitPlotFrame$estimate)
lines(logitPlotFrame$time, logitPlotFrame$estimate)
# logisitc regression loop:
logitPlotFrame <- as.data.frame(matrix(0,nrow=0, ncol=2))
colnames(logitPlotFrame) <- c("time", "estimate")
for (i in seq(0,12,0.001)) {
insulin_at_i_y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=(i/12),1,0)
logitRegression<-glm(insulin_at_i_y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
reportFrame <- data.frame(i, logitRegression$coefficients[2])
colnames(reportFrame) <- c("time", "estimate")
logitPlotFrame <- rbind(logitPlotFrame, reportFrame)
}
plot(logitPlotFrame$time, logitPlotFrame$estimate)
lines(logitPlotFrame$time, logitPlotFrame$estimate)
# logisitc regression loop:
logitPlotFrame <- as.data.frame(matrix(0,nrow=0, ncol=2))
colnames(logitPlotFrame) <- c("time", "estimate")
for (i in seq(0,24,0.01)) {
insulin_at_i_y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=(i/12),1,0)
logitRegression<-glm(insulin_at_i_y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
reportFrame <- data.frame(i, logitRegression$coefficients[2])
colnames(reportFrame) <- c("time", "estimate")
logitPlotFrame <- rbind(logitPlotFrame, reportFrame)
}
plot(logitPlotFrame$time, logitPlotFrame$estimate)
lines(logitPlotFrame$time, logitPlotFrame$estimate)
hist(cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears)
# subset to insulin naive
cpepMergeDT_firstCPEPval_firstIns <- subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>=0)
# logisitc regression loop:
logitPlotFrame <- as.data.frame(matrix(0,nrow=0, ncol=2))
colnames(logitPlotFrame) <- c("time", "estimate")
for (i in seq(0,24,0.01)) {
insulin_at_i_y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=(i/12),1,0)
logitRegression<-glm(insulin_at_i_y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
reportFrame <- data.frame(i, logitRegression$coefficients[2])
colnames(reportFrame) <- c("time", "estimate")
logitPlotFrame <- rbind(logitPlotFrame, reportFrame)
}
plot(logitPlotFrame$time, logitPlotFrame$estimate)
lines(logitPlotFrame$time, logitPlotFrame$estimate)
medianCPEP<-quantile(subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>=0)$numericCPEP)[3]
# insulin free survival
simpleSurvivalPlot_timeToInsulin(subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>=0), returnUnixDateTime('2016-12-16'), 0, (365.25/12)*0, 365.25*1,medianCPEP)
mergeCPEP_insulin_firstCPEP_firstIns<-cpepMergeDT_firstCPEPval_firstIns
cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID[is.na(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID)]<-0
cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulin<-cpepMergeDT_firstCPEPval_firstIns$timeFirstInsulin-cpepMergeDT_firstCPEPval_firstIns$dateplustime1.x
cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<-cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulin/(60*60*24*365.25)
cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears[is.na(cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears)]<-0
## start plots
hist(cpepMergeDT_firstCPEPval_firstIns$numericCPEP,breaks=seq(0,8,0.1))
boxplot(subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>0)$timeToFirstInsulinYears ~ cut(subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>0)$numericCPEP,breaks=seq(0,8,0.1)),ylim=c(0,1))
## logistic regression ? on insulin at 6m, 1y, 2y
insulin_at_0.5y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=0.5,1,0)
insulin_at_1y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=1,1,0)
insulin_at_2y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=1,2,0)
logitRegression<-glm(insulin_at_0.5y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
logitRegression<-glm(insulin_at_1y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
logitRegression<-glm(insulin_at_2y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
hist(cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears)
cpepMergeDT_firstCPEPval<-cpepMergeDT[flagFirstVal==1]
## write out IDs for drug match
# outputName<-paste("../cPeptideData/cpepIDs2.csv",sep="")
# write.table(mergeCPepSD[flagFirstVal==1]$LinkId,file=outputName,sep=",",append=F,col.names=T)
## import drug data
cpepDrugs<-read.csv("~/R/GlCoSy/SD_workingSource/cpep_drugs_byLinkId.txt",stringsAsFactors = TRUE)
cpepDrugs$LinkId<-as.numeric(levels(cpepDrugs$LinkId))[cpepDrugs$LinkId]
cpepDrugsDT<-data.table(cpepDrugs)
cpepDrugsDT_insulin<-cpepDrugsDT[BNFCode=="6.1.1.1" | BNFCode=="6.1.1.51"| substr(BNFCode,1,7)=="0601011" | BNFCode=="6.1.1.2" | substr(BNFCode,1,7)=="0601012"]
cpepDrugsDT_insulin$dateplustime1<-as.numeric(as.POSIXct(cpepDrugsDT_insulin$PrescriptionDateTime, format="%Y-%m-%d", tz="GMT"))
cpepDrugsDT_insulin<-cpepDrugsDT_insulin[order(cpepDrugsDT_insulin$LinkId,cpepDrugsDT_insulin$dateplustime1)]
## insulin prescription timings
cpepDrugsDT_insulin[, c("timeFirstInsulin") := min(dateplustime1) , by=.(LinkId)]
cpepDrugsDT_insulin[, c("timeLastInsulin") := max(dateplustime1) , by=.(LinkId)]
cpepDrugsDT_insulin[, nPrescriptionsPerID := .N , by=.(LinkId)]
cpepDrugsDT_insulin[, nPrescriptionsInSequencePerID := seq(1,.N,1) , by=.(LinkId)]
cpepDrugsDT_insulin_firstPrescription<-cpepDrugsDT_insulin[nPrescriptionsInSequencePerID==1]
cpepMergeDT_firstCPEPval_firstIns<-merge(survivalSet,cpepDrugsDT_insulin_firstPrescription,by.x="LinkId",by.y="LinkId",all.x=T)
# cpepMergeDT_firstCPEPval_firstIns<-merge(cpepMergeDT_firstCPEPval,cpepDrugsDT_insulin_firstPrescription,by.x="LinkId",by.y="LinkId",all.x=T)
## need to add death to composite endpoint of prescription of insulin or death
mergeCPEP_insulin_firstCPEP_firstIns<-cpepMergeDT_firstCPEPval_firstIns
cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID[is.na(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID)]<-0
cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulin<-cpepMergeDT_firstCPEPval_firstIns$timeFirstInsulin-cpepMergeDT_firstCPEPval_firstIns$dateplustime1.x
cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<-cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulin/(60*60*24*365.25)
cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears[is.na(cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears)]<-0
## start plots
hist(cpepMergeDT_firstCPEPval_firstIns$numericCPEP,breaks=seq(0,8,0.1))
boxplot(subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>0)$timeToFirstInsulinYears ~ cut(subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>0)$numericCPEP,breaks=seq(0,8,0.1)),ylim=c(0,1))
## logistic regression ? on insulin at 6m, 1y, 2y
insulin_at_0.5y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=0.5,1,0)
insulin_at_1y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=1,1,0)
insulin_at_2y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=1,2,0)
logitRegression<-glm(insulin_at_0.5y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
logitRegression<-glm(insulin_at_1y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
logitRegression<-glm(insulin_at_2y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
hist(cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears)
i=2
insulin_at_i_y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=(i/12),1,0)
logitRegression<-glm(insulin_at_i_y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
# logisitc regression loop:
logitPlotFrame <- as.data.frame(matrix(0,nrow=0, ncol=2))
colnames(logitPlotFrame) <- c("time", "estimate")
for (i in seq(0,24,0.01)) {
insulin_at_i_y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=(i/12),1,0)
logitRegression<-glm(insulin_at_i_y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
reportFrame <- data.frame(i, logitRegression$coefficients[2])
colnames(reportFrame) <- c("time", "estimate")
logitPlotFrame <- rbind(logitPlotFrame, reportFrame)
}
plot(logitPlotFrame$time, logitPlotFrame$estimate)
lines(logitPlotFrame$time, logitPlotFrame$estimate)
cpepMergeDT_firstCPEPval_firstIns[1,]
logitRegressionFunction<-function(inputFrame,timePoint) {
insulin_at_timePoint<-ifelse(inputFrame$nPrescriptionsPerID>0 & inputFrame$timeToFirstInsulinYears<=timePoint,1,0)
logitRegression<-glm(insulin_at_timePoint ~ inputFrame$numericCPEP + inputFrame$ageAtTimeOfTestYears)
return(summary(logitRegression))
}
logitRegressionFunction(subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>=0),1)
logitRegressionFunction(subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>=0),1)
## load in BMI dataset
bmiSetDF<-read.csv("../GlCoSy/SD_workingSource/BMISetDTclean.csv")
bmiSetDT<-data.table(bmiSetDF)
bmiSetDT$dateplustime1_bmi<-bmiSetDT$dateplustime1; bmiSetDT$dateplustime1<-NULL
## find most recent BMI prior to CPEP measurement for each ID
bmi_cpep_merge<-merge(cpepMergeDT_firstCPEPval_firstIns,bmiSetDT,by.x="LinkId",by.y="LinkId")
bmi_cpep_merge$testDate_bmiDate_difference<-bmi_cpep_merge$dateplustime1.x - bmi_cpep_merge$dateplustime1_bmi
## all BMIs performed before the CPEP or up to 90 days post CPEP
bmi_cpep_merge<-bmi_cpep_merge[testDate_bmiDate_difference>0 | testDate_bmiDate_difference>(60*60*24*365.25*10*-1)]
findNearestMeasure<-function(all_metric_dateplustime1, metricNumeric, testDate_metricDate_difference,postTestTimeLimitDays) {
# all_metric_dateplustime1<-bmi_cpep_merge[LinkId==2147487389]$dateplustime1_bmi; metricNumeric<-bmi_cpep_merge[LinkId==2147487389]$bmiNumeric; testDate_metricDate_difference<-bmi_cpep_merge[LinkId==2147487389]$testDate_bmiDate_difference; postTestTimeLimitDays<-90
testFrame<-data.frame(all_metric_dateplustime1, metricNumeric, testDate_metricDate_difference)
testFrame<-subset(testFrame,testDate_metricDate_difference>(60*60*24*postTestTimeLimitDays*-1))
testFrame$flag<-ifelse(testFrame$testDate_metricDate_difference>0,1,0)
if (sum(testFrame$flag>0)) {outputVals<-subset(testFrame,testDate_metricDate_difference==min(subset(testFrame,flag==1)$testDate_metricDate_difference))}
if (sum(testFrame$flag==0)) {outputVals<-subset(testFrame,testDate_metricDate_difference==max(subset(testFrame,flag==0)$testDate_metricDate_difference))}
returnVals<-list(outputVals$all_metric_dateplustime1, outputVals$metricNumeric)
return(returnVals)
}
bmi_cpep_merge[, c("nearestBMI_dateplustime1", "nearestBMI") := findNearestMeasure(dateplustime1_bmi, bmiNumeric, testDate_bmiDate_difference,90) , by=.(LinkId)]
bmi_cpep_merge[, nBMImeasuresPerID := seq(1,.N,1) , by=.(LinkId)]
bmi_cpep_merge<-bmi_cpep_merge[nBMImeasuresPerID==1]
bmi_cpep_merge <- bmi_cpep_merge[nearestBMI>0]
## load in BMI dataset
bmiSetDF<-read.csv("~/R/GlCoSy/SD_workingSource/BMISetDTclean.csv")
bmiSetDT<-data.table(bmiSetDF)
bmiSetDT$dateplustime1_bmi<-bmiSetDT$dateplustime1; bmiSetDT$dateplustime1<-NULL
## find most recent BMI prior to CPEP measurement for each ID
bmi_cpep_merge<-merge(cpepMergeDT_firstCPEPval_firstIns,bmiSetDT,by.x="LinkId",by.y="LinkId")
bmi_cpep_merge$testDate_bmiDate_difference<-bmi_cpep_merge$dateplustime1.x - bmi_cpep_merge$dateplustime1_bmi
## all BMIs performed before the CPEP or up to 90 days post CPEP
bmi_cpep_merge<-bmi_cpep_merge[testDate_bmiDate_difference>0 | testDate_bmiDate_difference>(60*60*24*365.25*10*-1)]
findNearestMeasure<-function(all_metric_dateplustime1, metricNumeric, testDate_metricDate_difference,postTestTimeLimitDays) {
# all_metric_dateplustime1<-bmi_cpep_merge[LinkId==2147487389]$dateplustime1_bmi; metricNumeric<-bmi_cpep_merge[LinkId==2147487389]$bmiNumeric; testDate_metricDate_difference<-bmi_cpep_merge[LinkId==2147487389]$testDate_bmiDate_difference; postTestTimeLimitDays<-90
testFrame<-data.frame(all_metric_dateplustime1, metricNumeric, testDate_metricDate_difference)
testFrame<-subset(testFrame,testDate_metricDate_difference>(60*60*24*postTestTimeLimitDays*-1))
testFrame$flag<-ifelse(testFrame$testDate_metricDate_difference>0,1,0)
if (sum(testFrame$flag>0)) {outputVals<-subset(testFrame,testDate_metricDate_difference==min(subset(testFrame,flag==1)$testDate_metricDate_difference))}
if (sum(testFrame$flag==0)) {outputVals<-subset(testFrame,testDate_metricDate_difference==max(subset(testFrame,flag==0)$testDate_metricDate_difference))}
returnVals<-list(outputVals$all_metric_dateplustime1, outputVals$metricNumeric)
return(returnVals)
}
bmi_cpep_merge[, c("nearestBMI_dateplustime1", "nearestBMI") := findNearestMeasure(dateplustime1_bmi, bmiNumeric, testDate_bmiDate_difference,90) , by=.(LinkId)]
bmi_cpep_merge[, nBMImeasuresPerID := seq(1,.N,1) , by=.(LinkId)]
bmi_cpep_merge<-bmi_cpep_merge[nBMImeasuresPerID==1]
bmi_cpep_merge <- bmi_cpep_merge[nearestBMI>0]
## load in BMI dataset
bmiSetDF<-read.csv("~/R/GlCoSy/SD_workingSource/BMISetDTclean.csv")
bmiSetDT<-data.table(bmiSetDF)
bmiSetDT$dateplustime1_bmi<-bmiSetDT$dateplustime1; bmiSetDT$dateplustime1<-NULL
bmi_cpep_merge<-merge(cpepMergeDT_firstCPEPval_firstIns,bmiSetDT,by.x="LinkId",by.y="LinkId")
bmi_cpep_merge$testDate_bmiDate_difference<-bmi_cpep_merge$dateplustime1.x - bmi_cpep_merge$dateplustime1_bmi
bmi_cpep_merge<-bmi_cpep_merge[testDate_bmiDate_difference>0 | testDate_bmiDate_difference>(60*60*24*365.25*10*-1)]
findNearestMeasure<-function(all_metric_dateplustime1, metricNumeric, testDate_metricDate_difference,postTestTimeLimitDays) {
# all_metric_dateplustime1<-bmi_cpep_merge[LinkId==2147487389]$dateplustime1_bmi; metricNumeric<-bmi_cpep_merge[LinkId==2147487389]$bmiNumeric; testDate_metricDate_difference<-bmi_cpep_merge[LinkId==2147487389]$testDate_bmiDate_difference; postTestTimeLimitDays<-90
testFrame<-data.frame(all_metric_dateplustime1, metricNumeric, testDate_metricDate_difference)
testFrame<-subset(testFrame,testDate_metricDate_difference>(60*60*24*postTestTimeLimitDays*-1))
testFrame$flag<-ifelse(testFrame$testDate_metricDate_difference>0,1,0)
if (sum(testFrame$flag>0)) {outputVals<-subset(testFrame,testDate_metricDate_difference==min(subset(testFrame,flag==1)$testDate_metricDate_difference))}
if (sum(testFrame$flag==0)) {outputVals<-subset(testFrame,testDate_metricDate_difference==max(subset(testFrame,flag==0)$testDate_metricDate_difference))}
returnVals<-list(outputVals$all_metric_dateplustime1, outputVals$metricNumeric)
return(returnVals)
}
findNearestMeasure
bmi_cpep_merge[, c("nearestBMI_dateplustime1", "nearestBMI") := findNearestMeasure(dateplustime1_bmi, bmiNumeric, testDate_bmiDate_difference,90) , by=.(LinkId)]
all_metric_dateplustime1<-bmi_cpep_merge[LinkId==2147487389]$dateplustime1_bmi; metricNumeric<-bmi_cpep_merge[LinkId==2147487389]$bmiNumeric; testDate_metricDate_difference<-bmi_cpep_merge[LinkId==2147487389]$testDate_bmiDate_difference; postTestTimeLimitDays<-90
testFrame<-data.frame(all_metric_dateplustime1, metricNumeric, testDate_metricDate_difference)
testFrame<-subset(testFrame,testDate_metricDate_difference>(60*60*24*postTestTimeLimitDays*-1))
testFrame$flag<-ifelse(testFrame$testDate_metricDate_difference>0,1,0)
if (sum(testFrame$flag>0)) {outputVals<-subset(testFrame,testDate_metricDate_difference==min(subset(testFrame,flag==1)$testDate_metricDate_difference))}
if (sum(testFrame$flag==0)) {outputVals<-subset(testFrame,testDate_metricDate_difference==max(subset(testFrame,flag==0)$testDate_metricDate_difference))}
outputVals
returnVals<-list(outputVals$all_metric_dateplustime1, outputVals$metricNumeric)
returnVals
bmi_cpep_merge <- read.csv("~/R/GlCoSy/SD_workingSource/cpep_bmi_insulinNaive.csv")
dim(bmi_cpep_merge)
medianCPEP <- quantile(subset(bmi_cpep_merge,timeToFirstInsulinYears>=0)$numericCPEP)[3]
simpleSurvivalPlot_timeToInsulin_BMI(subset(bmi_cpep_merge,timeToFirstInsulinYears>=0), returnUnixDateTime('2016-12-16'), 0, (365.25/12)*0, 365.25*1,medianCPEP)
# mortality
bmi_cpep_merge_forSurvival <- data.frame(bmi_cpep_merge$LinkId, bmi_cpep_merge$nearestBMI)
survivalSet_BMI <- merge(survivalSet, bmi_cpep_merge_forSurvival, by.x = "LinkId", by.y = "bmi_cpep_merge.LinkId")
logitRegressionFunctionWithBMI(survivalSet_BMI,3)
# subset to insulin naive
cpepMergeDT_firstCPEPval_firstIns <- subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>=0)
# logisitc regression loop:
logitPlotFrame <- as.data.frame(matrix(0,nrow=0, ncol=2))
colnames(logitPlotFrame) <- c("time", "estimate")
for (i in seq(0,24,0.01)) {
insulin_at_i_y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=(i/12),1,0)
logitRegression<-glm(insulin_at_i_y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
reportFrame <- data.frame(i, logitRegression$coefficients[2])
colnames(reportFrame) <- c("time", "estimate")
logitPlotFrame <- rbind(logitPlotFrame, reportFrame)
}
plot(logitPlotFrame$time, logitPlotFrame$estimate)
lines(logitPlotFrame$time, logitPlotFrame$estimate)
medianCPEP<-quantile(subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>=0)$numericCPEP)[3]
# insulin free survival
simpleSurvivalPlot_timeToInsulin(subset(cpepMergeDT_firstCPEPval_firstIns,timeToFirstInsulinYears>=0), returnUnixDateTime('2016-12-16'), 0, (365.25/12)*0, 365.25*1,medianCPEP)
# logisitc regression loop:
logitPlotFrame <- as.data.frame(matrix(0,nrow=0, ncol=2))
colnames(logitPlotFrame) <- c("time", "estimate")
for (i in seq(0,24,0.01)) {
insulin_at_i_y<-ifelse(cpepMergeDT_firstCPEPval_firstIns$nPrescriptionsPerID>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears>0 & cpepMergeDT_firstCPEPval_firstIns$timeToFirstInsulinYears<=(i/12),1,0)
logitRegression<-glm(insulin_at_i_y ~ cpepMergeDT_firstCPEPval_firstIns$numericCPEP + cpepMergeDT_firstCPEPval_firstIns$ageAtTimeOfTestYears); summary(logitRegression)
reportFrame <- data.frame(i, logitRegression$coefficients[2])
colnames(reportFrame) <- c("time", "estimate")
logitPlotFrame <- rbind(logitPlotFrame, reportFrame)
}
plot(logitPlotFrame$time, logitPlotFrame$estimate)
lines(logitPlotFrame$time, logitPlotFrame$estimate)
# mortality
bmi_cpep_merge_forSurvival <- data.frame(bmi_cpep_merge$LinkId, bmi_cpep_merge$nearestBMI)
survivalSet_BMI <- merge(survivalSet, bmi_cpep_merge_forSurvival, by.x = "LinkId", by.y = "bmi_cpep_merge.LinkId")
logitRegressionFunctionWithBMI(survivalSet_BMI,3)
cpep_BMI<-bmi_cpep_merge[bmiNumeric<30]
medianCPEP<-quantile(subset(cpep_BMI,timeToFirstInsulinYears>=0)$numericCPEP)[3]
##
simpleSurvivalPlot_timeToInsulin(subset(cpep_BMI,timeToFirstInsulinYears>=0), returnUnixDateTime('2016-12-16'), 0, (365.25/12)*0, 365.25*2,medianCPEP)
simpleSurvivalPlot_timeToInsulin_BMI(subset(cpep_BMI,timeToFirstInsulinYears>=0), returnUnixDateTime('2016-12-16'), 0, (365.25/12)*0, 365.25*2,medianCPEP)
# time to insulin
## logistic regression ? on insulin at 6m, 1y, 2y
insulin_at_0.5y<-ifelse(bmi_cpep_merge$nPrescriptionsPerID>0 & bmi_cpep_merge$timeToFirstInsulinYears<=0.5,1,0)
insulin_at_1y<-ifelse(bmi_cpep_merge$nPrescriptionsPerID>0 & bmi_cpep_merge$timeToFirstInsulinYears<=1,1,0)
insulin_at_2y<-ifelse(bmi_cpep_merge$nPrescriptionsPerID>0 & bmi_cpep_merge$timeToFirstInsulinYears<=1,2,0)
logitRegression<-glm(insulin_at_0.5y ~ bmi_cpep_merge$numericCPEP + bmi_cpep_merge$ageAtTimeOfTestYears + bmi_cpep_merge$nearestBMI); summary(logitRegression)
logitRegression<-glm(insulin_at_1y ~ bmi_cpep_merge$numericCPEP + bmi_cpep_merge$ageAtTimeOfTestYears + bmi_cpep_merge$nearestBMI); summary(logitRegression)
logitRegression<-glm(insulin_at_2y ~ bmi_cpep_merge$numericCPEP + bmi_cpep_merge$ageAtTimeOfTestYears + bmi_cpep_merge$nearestBMI); summary(logitRegression)
simpleSurvivalPlot_timeToInsulin(subset(cpep_BMI,timeToFirstInsulinYears>=0), returnUnixDateTime('2016-12-16'), 0, (365.25/12)*0, 365.25*2,medianCPEP)
simpleSurvivalPlot_timeToInsulin_BMI(subset(bmi_cpep_merge,timeToFirstInsulinYears>=0), returnUnixDateTime('2016-12-16'), 0, (365.25/12)*0, 365.25*1,medianCPEP)
bmi_cpep_merge_forSurvival <- data.frame(bmi_cpep_merge$LinkId, bmi_cpep_merge$nearestBMI)
survivalSet_BMI <- merge(survivalSet, bmi_cpep_merge_forSurvival, by.x = "LinkId", by.y = "bmi_cpep_merge.LinkId")
logitRegressionFunctionWithBMI(survivalSet_BMI,3)
logitRegressionFunctionWithBMI(survivalSet_BMI,5)
dim(survivalSet_BMI)
survivalSet_BMI[1,]
quantile(survivalSet_BMI$bmi_cpep_merge.nearestBMI)
lowBMI<-subset(survivalSet_BMI, bmi_cpep_merge.nearestBMI < 27.5)
logitRegressionFunctionWithBMI(lowBMI,3)
highBMI<-subset(survivalSet_BMI, bmi_cpep_merge.nearestBMI > 27.5)
logitRegressionFunctionWithBMI(highBMI,3)
highBMI<-subset(survivalSet_BMI, bmi_cpep_merge.nearestBMI > 30)
logitRegressionFunctionWithBMI(highBMI,3)
lowBMI<-subset(survivalSet_BMI, bmi_cpep_merge.nearestBMI < 25)
logitRegressionFunctionWithBMI(lowBMI,3)
lowBMI<-subset(survivalSet_BMI, bmi_cpep_merge.nearestBMI < 30)
logitRegressionFunctionWithBMI(lowBMI,3)
normBMI<-subset(survivalSet_BMI, bmi_cpep_merge.nearestBMI < 30 & bmi_cpep_merge.nearestBMI >25)
logitRegressionFunctionWithBMI(normBMI,3)
simpleSurvivalPlot_timeToInsulin_BMI(subset(cpep_BMI,timeToFirstInsulinYears>=0), returnUnixDateTime('2016-12-16'), 0, (365.25/12)*0, 365.25*2,medianCPEP)
bmi_cpep_merge[1,]
cpep_BMI<-bmi_cpep_merge[bmiNumeric<30]
simpleSurvivalPlot_timeToInsulin_BMI(subset(bmi_cpep_merge,timeToFirstInsulinYears>=0), returnUnixDateTime('2016-12-16'), 0, (365.25/12)*0, 365.25*1,medianCPEP)
simpleSurvivalPlot_timeToInsulin_BMI<-function(inputFrame,endDateUnix,ylimMin,startAnalysisDays,followUpDays,cpepThreshold) {
# inputFrame<-subset(mergeCPEP_insulin_firstCPEP_firstIns,timeToFirstInsulinYears>=0)
# endDateUnix<-returnUnixDateTime("2016-12-16")
SurvivalData<-inputFrame
DaySeconds<-(60*60*24)
shortCensorPeriodStartDay  <- DaySeconds*startAnalysisDays
shortCensorPeriodEndDay    <- DaySeconds*followUpDays
SurvivalData$onInsulin<-ifelse(SurvivalData$nPrescriptionsPerID>0,1,0)
lastDOD<-endDateUnix
SurvivalData$dateOfDischarge<-SurvivalData$dateplustime1.x
SurvivalData$timeToDeath<-ifelse(SurvivalData$onInsulin==1,(SurvivalData$dateplustime1.y-SurvivalData$dateplustime1.x),0)
# SurvivalData$timeToDeath<-SurvivalData$timeToDeath/DaySeconds
SurvivalData$timeToDeathInterval<-ifelse(SurvivalData$onInsulin==0,(lastDOD-SurvivalData$dateplustime1.x),SurvivalData$timeToDeath)
SurvivalData$timeToDeathInterval[is.na(SurvivalData$timeToDeathInterval)]<-0; SurvivalData<-subset(SurvivalData,timeToDeathInterval>0)
# SurvivalData$timeToDeathInterval<-SurvivalData$timeToDeathInterval/(60*60*24*365.25)
SurvivalData$shortDeathEvent <- SurvivalData$onInsulin
SurvivalData$shortDeathEvent <- ifelse(SurvivalData$onInsulin==1 & SurvivalData$timeToDeath>=(shortCensorPeriodStartDay) & SurvivalData$timeToDeath<(shortCensorPeriodEndDay),1,0)
xlimMax<-ifelse(shortCensorPeriodEndDay<DaySeconds*10000,shortCensorPeriodEndDay,round(max(SurvivalData$timeToDeathInterval)))
#  SurvivalData$sexDigit<-ifelse(nchar(SurvivalData$charID==9),as.numeric(substr(SurvivalData$charID,8,8)),as.numeric(substr(SurvivalData$charID,9,9)))
# SurvivalData$sexNumber<-ifelse(SurvivalData$sexDigit%%2==0,1,0)
#  SurvivalData$sex<-factor(1*(SurvivalData$sexNumber <1),levels=0:1,labels=c("F","M"))
mfitAge50<-survfit(Surv(timeToDeathInterval, shortDeathEvent) ~ (numericCPEP<cpepThreshold), data = SurvivalData)
shortPlotTitle <- paste("insulin free survival, time ",round(shortCensorPeriodStartDay)/DaySeconds," to ",xlimMax/DaySeconds," days\n n= ",nrow(SurvivalData),", threshold: ",cpepThreshold,"\ncovariables: age at time of test",sep="")
plot(mfitAge50,mark.time=T,lty=1:6,conf.int=F,col=c("black","red","blue","green","orange","purple"),main=shortPlotTitle,xlim=c(shortCensorPeriodStartDay,xlimMax),lwd=3,ylim=c(ylimMin,1))
mfitAge50.coxph<-coxph(Surv(timeToDeathInterval, shortDeathEvent) ~ ageAtTimeOfTestYears+nearestBMI+(numericCPEP<cpepThreshold), data = SurvivalData)
pVal <- summary(mfitAge50.coxph)$coef[,5]; HR <- round(exp(coef(mfitAge50.coxph)),2)
legendText <- paste("p = ",pVal," | HR = ",HR,sep="")
summarySurvfit <- summary(mfitAge50); legendNames <- row.names(summarySurvfit$table)
legend("bottomleft",c(legendNames),lty=1:6,col=c("black","red","blue","green","orange","purple"),cex=0.8); legend("bottomright",legendText,cex=0.6)
print(mfitAge50.coxph)
fit <- coxph(Surv(timeToDeathInterval, shortDeathEvent)~ageAtTimeOfTestYears+nearestBMI+pspline(numericCPEP), data=SurvivalData, x=TRUE)
hr1 <- smoothHR(data=SurvivalData, coxfit=fit)
plot(hr1, predictor="numericCPEP", prob=0, conf.level=0.95)
print(summary(fit))
}
simpleSurvivalPlot_timeToInsulin_BMI(subset(bmi_cpep_merge,timeToFirstInsulinYears>=0), returnUnixDateTime('2016-12-16'), 0, (365.25/12)*0, 365.25*1,medianCPEP)
simpleSurvivalPlot(survivalSet,returnUnixDateTime('2016-12-16'),(365.25/12)*0, 365.25*3,3)
## load in BMI dataset
bmiSetDF<-read.csv("~/R/GlCoSy/SD_workingSource/BMISetDTclean.csv")
bmiSetDT<-data.table(bmiSetDF)
bmiSetDT$dateplustime1_bmi<-bmiSetDT$dateplustime1; bmiSetDT$dateplustime1<-NULL
## find most recent BMI prior to CPEP measurement for each ID
bmi_cpep_merge<-merge(cpepMergeDT_firstCPEPval_firstIns,bmiSetDT,by.x="LinkId",by.y="LinkId")
bmi_cpep_merge$testDate_bmiDate_difference<-bmi_cpep_merge$dateplustime1.x - bmi_cpep_merge$dateplustime1_bmi
## all BMIs performed before the CPEP or up to 90 days post CPEP
bmi_cpep_merge<-bmi_cpep_merge[testDate_bmiDate_difference>0 | testDate_bmiDate_difference>(60*60*24*365.25*10*-1)]
bmi_cpep_merge[1,]
dim(bmi_cpep_merge)
bmi_cpep_merge[, c("flagNearestBMI") := ifelse(sqrt(testDate_bmiDate_difference^2) == min(sqrt(testDate_bmiDate_difference^2)),1,0) , by=.(LinkId)]
bmi_cpep_merge[1,]
length(unique(bmi_cpep_merge$LinkId))
sum(bmi_cpep_merge$flagNearestBMI)
bmi_cpep_merge[, nBMImeasuresPerID := seq(1,.N,1) , by=.(LinkId)]
bmi_cpep_merge <- bmi_cpep_merge[flagNearestBMI == 1]
inputFrame <- bmi_cpep_merge
endDateUnix<-returnUnixDateTime('2016-12-16'); startAnalysisDays<-0; followUpDays<-365.25*10
SurvivalData<-inputFrame
SurvivalData$isDead<-ifelse(SurvivalData$DeathDateUnix>0,1,0)
DaySeconds<-(60*60*24)
shortCensorPeriodStartDay  <- DaySeconds*startAnalysisDays
shortCensorPeriodEndDay    <- DaySeconds*followUpDays
lastDOD<-endDateUnix
SurvivalData$dateOfDischarge<-SurvivalData$dateplustime1
SurvivalData$timeToDeath<-ifelse(SurvivalData$isDead==1,(SurvivalData$DeathDateUnix-SurvivalData$dateOfDischarge),0)
#		SurvivalData$timeToDeath<-SurvivalData$timeToDeath/DaySeconds
SurvivalData$timeToDeathInterval<-ifelse(SurvivalData$isDead==0,(lastDOD-SurvivalData$dateOfDischarge),SurvivalData$timeToDeath)
SurvivalData$timeToDeathInterval[is.na(SurvivalData$timeToDeathInterval)]<-0; SurvivalData<-subset(SurvivalData,timeToDeathInterval>0)
# SurvivalData$timeToDeathInterval<-SurvivalData$timeToDeathInterval/(60*60*24*365.25)
SurvivalData$shortDeathEvent <- SurvivalData$isDead
SurvivalData$shortDeathEvent <- ifelse(SurvivalData$isDead==1 & SurvivalData$timeToDeath>=(shortCensorPeriodStartDay) & SurvivalData$timeToDeath<(shortCensorPeriodEndDay),1,0)
xlimMax<-ifelse(shortCensorPeriodEndDay<DaySeconds*10000,shortCensorPeriodEndDay,round(max(SurvivalData$timeToDeathInterval)))
mfitAge50<-survfit(Surv(timeToDeathInterval, shortDeathEvent) ~ 1, data = SurvivalData)
shortPlotTitle <- paste("Mortality, time ",round(shortCensorPeriodStartDay)/DaySeconds," to ",round(max(SurvivalData$timeToDeathInterval))/DaySeconds," days\n n= ",nrow(SurvivalData),", threshold: ",quantile(SurvivalData$hba1cIQRinRange)[3],sep="")
plot(mfitAge50,mark.time=T,lty=1:6,conf.int=F,col=c("black","red","blue","green","orange","purple"),main=shortPlotTitle,xlim=c(shortCensorPeriodStartDay,round(max(SurvivalData$timeToDeathInterval))),lwd=3,ylim=c(ylimMin,1))
inputFrame[1,]
SurvivalData<-inputFrame
SurvivalData$isDead<-ifelse(SurvivalData$DeathDateUnix>0,1,0)
DaySeconds<-(60*60*24)
shortCensorPeriodStartDay  <- DaySeconds*startAnalysisDays
shortCensorPeriodEndDay    <- DaySeconds*followUpDays
lastDOD<-endDateUnix
SurvivalData$dateOfDischarge<-SurvivalData$dateplustime1.x
SurvivalData$timeToDeath<-ifelse(SurvivalData$isDead==1,(SurvivalData$DeathDateUnix-SurvivalData$dateOfDischarge),0)
#		SurvivalData$timeToDeath<-SurvivalData$timeToDeath/DaySeconds
SurvivalData$timeToDeathInterval<-ifelse(SurvivalData$isDead==0,(lastDOD-SurvivalData$dateOfDischarge),SurvivalData$timeToDeath)
SurvivalData$timeToDeathInterval[is.na(SurvivalData$timeToDeathInterval)]<-0; SurvivalData<-subset(SurvivalData,timeToDeathInterval>0)
# SurvivalData$timeToDeathInterval<-SurvivalData$timeToDeathInterval/(60*60*24*365.25)
SurvivalData$shortDeathEvent <- SurvivalData$isDead
SurvivalData$shortDeathEvent <- ifelse(SurvivalData$isDead==1 & SurvivalData$timeToDeath>=(shortCensorPeriodStartDay) & SurvivalData$timeToDeath<(shortCensorPeriodEndDay),1,0)
xlimMax<-ifelse(shortCensorPeriodEndDay<DaySeconds*10000,shortCensorPeriodEndDay,round(max(SurvivalData$timeToDeathInterval)))
mfitAge50<-survfit(Surv(timeToDeathInterval, shortDeathEvent) ~ 1, data = SurvivalData)
shortPlotTitle <- paste("Mortality, time ",round(shortCensorPeriodStartDay)/DaySeconds," to ",round(max(SurvivalData$timeToDeathInterval))/DaySeconds," days\n n= ",nrow(SurvivalData),", threshold: ",quantile(SurvivalData$hba1cIQRinRange)[3],sep="")
plot(mfitAge50,mark.time=T,lty=1:6,conf.int=F,col=c("black","red","blue","green","orange","purple"),main=shortPlotTitle,xlim=c(shortCensorPeriodStartDay,round(max(SurvivalData$timeToDeathInterval))),lwd=3,ylim=c(ylimMin,1))
ylimMin = 0
mfitAge50<-survfit(Surv(timeToDeathInterval, shortDeathEvent) ~ 1, data = SurvivalData)
shortPlotTitle <- paste("Mortality, time ",round(shortCensorPeriodStartDay)/DaySeconds," to ",round(max(SurvivalData$timeToDeathInterval))/DaySeconds," days\n n= ",nrow(SurvivalData),", threshold: ",quantile(SurvivalData$hba1cIQRinRange)[3],sep="")
plot(mfitAge50,mark.time=T,lty=1:6,conf.int=F,col=c("black","red","blue","green","orange","purple"),main=shortPlotTitle,xlim=c(shortCensorPeriodStartDay,round(max(SurvivalData$timeToDeathInterval))),lwd=3,ylim=c(ylimMin,1))
mfitAge50<-survfit(Surv(timeToDeathInterval, shortDeathEvent) ~ (numericCPEP>quantile(numericCPEP)[3]), data = SurvivalData)
shortPlotTitle <- paste("Mortality, time ",round(shortCensorPeriodStartDay)/DaySeconds," to ",round(max(SurvivalData$timeToDeathInterval))/DaySeconds," days\n n= ",nrow(SurvivalData),", threshold: ",quantile(SurvivalData$hba1cIQRinRange)[3],sep="")
plot(mfitAge50,mark.time=T,lty=1:6,conf.int=F,col=c("black","red","blue","green","orange","purple"),main=shortPlotTitle,xlim=c(shortCensorPeriodStartDay,xlimMax),lwd=3,ylim=c(ylimMin,1))
mfitAge50.coxph<-coxph(Surv(timeToDeathInterval, shortDeathEvent) ~ ageAtTimeOfTestYears+(numericCPEP>quantile(numericCPEP)[3]), data = SurvivalData)
pVal <- summary(mfitAge50.coxph)$coef[,5]; HR <- round(exp(coef(mfitAge50.coxph)),2)
legendText <- paste("p = ",pVal," | HR = ",HR,sep="")
summarySurvfit <- summary(mfitAge50); legendNames <- row.names(summarySurvfit$table)
legend("bottomleft",c(legendNames),lty=1:6,col=c("black","red","blue","green","orange","purple"),cex=0.8); legend("bottomright",legendText,cex=0.6)
ylimMin = 0.8
mfitAge50<-survfit(Surv(timeToDeathInterval, shortDeathEvent) ~ (numericCPEP>quantile(numericCPEP)[3]), data = SurvivalData)
shortPlotTitle <- paste("Mortality, time ",round(shortCensorPeriodStartDay)/DaySeconds," to ",round(max(SurvivalData$timeToDeathInterval))/DaySeconds," days\n n= ",nrow(SurvivalData),", threshold: ",quantile(SurvivalData$hba1cIQRinRange)[3],sep="")
plot(mfitAge50,mark.time=T,lty=1:6,conf.int=F,col=c("black","red","blue","green","orange","purple"),main=shortPlotTitle,xlim=c(shortCensorPeriodStartDay,xlimMax),lwd=3,ylim=c(ylimMin,1))
mfitAge50.coxph<-coxph(Surv(timeToDeathInterval, shortDeathEvent) ~ ageAtTimeOfTestYears+(numericCPEP>quantile(numericCPEP)[3]), data = SurvivalData)
pVal <- summary(mfitAge50.coxph)$coef[,5]; HR <- round(exp(coef(mfitAge50.coxph)),2)
legendText <- paste("p = ",pVal," | HR = ",HR,sep="")
summarySurvfit <- summary(mfitAge50); legendNames <- row.names(summarySurvfit$table)
legend("bottomleft",c(legendNames),lty=1:6,col=c("black","red","blue","green","orange","purple"),cex=0.8); legend("bottomright",legendText,cex=0.6)
print(mfitAge50.coxph)
SurvivalData[1,]
mfitAge50<-survfit(Surv(timeToDeathInterval, shortDeathEvent) ~ (numericCPEP>quantile(numericCPEP)[3]), data = SurvivalData)
shortPlotTitle <- paste("Mortality, time ",round(shortCensorPeriodStartDay)/DaySeconds," to ",round(max(SurvivalData$timeToDeathInterval))/DaySeconds," days\n n= ",nrow(SurvivalData),", threshold: ",quantile(SurvivalData$hba1cIQRinRange)[3],sep="")
plot(mfitAge50,mark.time=T,lty=1:6,conf.int=F,col=c("black","red","blue","green","orange","purple"),main=shortPlotTitle,xlim=c(shortCensorPeriodStartDay,xlimMax),lwd=3,ylim=c(ylimMin,1))
mfitAge50.coxph<-coxph(Surv(timeToDeathInterval, shortDeathEvent) ~ ageAtTimeOfTestYears+bmiNumeric + (numericCPEP>quantile(numericCPEP)[3]), data = SurvivalData)
pVal <- summary(mfitAge50.coxph)$coef[,5]; HR <- round(exp(coef(mfitAge50.coxph)),2)
legendText <- paste("p = ",pVal," | HR = ",HR,sep="")
summarySurvfit <- summary(mfitAge50); legendNames <- row.names(summarySurvfit$table)
legend("bottomleft",c(legendNames),lty=1:6,col=c("black","red","blue","green","orange","purple"),cex=0.8); legend("bottomright",legendText,cex=0.6)
print(mfitAge50.coxph)
fit <- coxph(Surv(timeToDeathInterval, shortDeathEvent)~ageAtTimeOfTestYears+pspline(numericCPEP), data=SurvivalData, x=TRUE)
hr1 <- smoothHR(data=SurvivalData, coxfit=fit)
plot(hr1, predictor="numericCPEP", prob=0, conf.level=0.95)
## distance from lowest HR value
SurvivalData$distanceFromValue <- sqrt((SurvivalData$numericCPEP-1.6)^2)
mfitAge50<-survfit(Surv(timeToDeathInterval, shortDeathEvent) ~ (distanceFromValue>quantile(distanceFromValue)[3]), data = SurvivalData)
shortPlotTitle <- paste("Mortality, time ",round(shortCensorPeriodStartDay)/DaySeconds," to ",round(max(SurvivalData$timeToDeathInterval))/DaySeconds," days\n n= ",nrow(SurvivalData),", threshold: ",quantile(SurvivalData$hba1cIQRinRange)[3],sep="")
plot(mfitAge50,mark.time=T,lty=1:6,conf.int=F,col=c("black","red","blue","green","orange","purple"),main=shortPlotTitle,xlim=c(shortCensorPeriodStartDay,xlimMax),lwd=3,ylim=c(ylimMin,1))
mfitAge50.coxph<-coxph(Surv(timeToDeathInterval, shortDeathEvent) ~ ageAtTimeOfTestYears+(distanceFromValue>quantile(distanceFromValue)[3]), data = SurvivalData)
pVal <- summary(mfitAge50.coxph)$coef[,5]; HR <- round(exp(coef(mfitAge50.coxph)),2)
legendText <- paste("p = ",pVal," | HR = ",HR,sep="")
summarySurvfit <- summary(mfitAge50); legendNames <- row.names(summarySurvfit$table)
legend("bottomleft",c(legendNames),lty=1:6,col=c("black","red","blue","green","orange","purple"),cex=0.8); legend("bottomright",legendText,cex=0.6)
mfitAge50<-survfit(Surv(timeToDeathInterval, shortDeathEvent) ~ (distanceFromValue>quantile(distanceFromValue)[3]), data = SurvivalData)
shortPlotTitle <- paste("Mortality, time ",round(shortCensorPeriodStartDay)/DaySeconds," to ",round(max(SurvivalData$timeToDeathInterval))/DaySeconds," days\n n= ",nrow(SurvivalData),", threshold: ",quantile(SurvivalData$hba1cIQRinRange)[3],sep="")
plot(mfitAge50,mark.time=T,lty=1:6,conf.int=F,col=c("black","red","blue","green","orange","purple"),main=shortPlotTitle,xlim=c(shortCensorPeriodStartDay,xlimMax),lwd=3,ylim=c(ylimMin,1))
mfitAge50.coxph<-coxph(Surv(timeToDeathInterval, shortDeathEvent) ~ ageAtTimeOfTestYears+bmiNumeric + (distanceFromValue>quantile(distanceFromValue)[3]), data = SurvivalData)
pVal <- summary(mfitAge50.coxph)$coef[,5]; HR <- round(exp(coef(mfitAge50.coxph)),2)
legendText <- paste("p = ",pVal," | HR = ",HR,sep="")
summarySurvfit <- summary(mfitAge50); legendNames <- row.names(summarySurvfit$table)
legend("bottomleft",c(legendNames),lty=1:6,col=c("black","red","blue","green","orange","purple"),cex=0.8); legend("bottomright",legendText,cex=0.6)
5011749486
1703994825
5011749486 / 1703994825
801879917.8
5011749486 / 801879918
801879918 / 5011749486
1703994825 / 1703994825
1703994825 / 5011749486
setwd("~/R/_workingDirectory/data_and_presentations_submissions/duk17")
library(data.table)
library(survival)
#source("./_T1DM_hba1c_admissionAndMortality.R")
#####################################################################################################
#####################################################################################################
## read in diabetes / hba1c prediction data, analyse and plot
#####################################################################################################
############################
tempWriteFile <- paste("../GlCoSy/source/admissionDataDT_T2DM.csv",sep=""); reportingDF<-read.csv(tempWriteFile); reportingDF<-data.table(reportingDF); diabetesType="Type 2 Diabetes. "
tempWriteFile <- paste("~/R/GlCoSy/source/admissionDataDT_T2DM.csv",sep=""); reportingDF<-read.csv(tempWriteFile); reportingDF<-data.table(reportingDF); diabetesType="Type 2 Diabetes. "
reportingDF$eAGyyyyDiff<-reportingDF$eAG-reportingDF$yyyy
# reportingDF$eAGyyyyDiff_inFrame<-reportingDF$eAG_inFrame-reportingDF$yyyy
reportingDF$AGN2<-reportingDF$eAG-reportingDF$medianFirst2CBGs
reportingDF$AGN3<-reportingDF$eAG-reportingDF$medianFirst3CBGs
#
reportingDF$AGN4<-reportingDF$eAG-reportingDF$medianFirst4CBGs
plotReportingDF$diabetesDurationYears <- (plotReportingDF$dateplustime1 - plotReportingDF$diagnosisDateUnix) / (60*60*24*365.25)
reportingDF$hypo<-ifelse(reportingDF$ID_ADMISSIONhypoEpisodes4.60>0,1,0)
dim(reportingDF)
plotReportingDF<-subset(reportingDF,nCBGperAdmission>=2)   # for admisisons: remove single CBG admissions
dim(plotReportingDF)
plotReportingDF<-subset(plotReportingDF,nHbA1cValuesInFrame>0)  # for HbA1c perior: remove those without a CBG in 15 month window
dim(plotReportingDF)
plotReportingDF<-data.table(plotReportingDF)
plotReportingDF$diabetesDurationYears <- (plotReportingDF$dateplustime1 - plotReportingDF$diagnosisDateUnix) / (60*60*24*365.25)
boxplot(plotReportingDF$IQR ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs last measured HbA1c (x axis)")
plotReportingDF[1,]
length(unique(plotReportingDF$ID))
dim(reportingDF)
length(unique(reportingDF$ID))
sum(reportingDF$nCBGperAdmission)
dim(plotReportingDF)
length(unique(plotReportingDF$ID))
sum(plotReportingDF$nCBGperAdmission)
quantile(plotReportingDF$age)
quantile(plotReportingDF$diabetesDurationYears)
quantile(plotReportingDF$admissionDurationDays)
quantile(plotReportingDF$medianGlu)
quantile(plotReportingDF$IQR)
quantile(plotReportingDF$yyyy)
dim(subset(plotReportingDF$minGlu<4))
dim(subset(plotReportingDF, minGlu<4))
14097 / 71950
dim(plotReportingDF)
sum(plotReportingDF$ID_ADMISSIONhypoEpisodes4.60)
40364 / sum(plotReportingDF$admissionDurationDays)
plotReportingDF[1,]
quantile(plotReportingDF$lastHbA1cInFrame)
quantile(plotReportingDF$eAG)
quantile(plotReportingDF$eAGyyyyDiff)
hist(plotReportingDF$eAGyyyyDiff)
hist(plotReportingDF$eAGyyyyDiff, breaks=seq(-30,30,1))
min(plotReportingDF$eAGyyyyDiff)
max(plotReportingDF$eAGyyyyDiff)
hist(plotReportingDF$eAGyyyyDiff, breaks=seq(-30,32,1))
attdAbstractIQR<-boxplot(plotReportingDF$IQR ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs AGN ATTD abstract 1 (x axis)")
