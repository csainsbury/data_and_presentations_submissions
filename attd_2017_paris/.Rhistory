4+3
24*60
1440/5
yyyyGammaSim<-rgamma(length(yyyy),shape=individualfitGamma$estimate[1],rate=individualfitGamma$estimate[2])
yyyySim<-rgamma(10000,shape=1.5,rate=1)
hist(yyyySim)
hist(yyyySim,breaks=100)
yyyySim<-rgamma(10000,shape=1.5,rate=1.3)
hist(yyyySim,breaks=100)
yyyySim<-rgamma(10000,shape=1.5,rate=0.5)
hist(yyyySim,breaks=100)
yyyySim<-rgamma(10000,shape=2,rate=0.5)
hist(yyyySim,breaks=100)
yyyySim<-rgamma(1000000,shape=2,rate=0.5)
hist(yyyySim,breaks=100)
?rnorm
?rgamma
xx<-rnorm(10000,mean=100,sd=20)
hist(xx)
hist(xx,braeks=100)
hist(xx,breaks=100)
hist(xx,breaks=100)
xx<-rnorm(1000000,mean=100,sd=20)
hist(xx,breaks=100)
hist(xx,breaks=1000)
xxC<-xx/18
xxC[1]
hist(xxC)
hist(xxC,breaks=100)
hist(xxC,breaks=1000)
xxC<-round(xx/18,1)
hist(xxC,breaks=1000)
xxC[1,]
xxC[1]
hist(xxC,breaks=10000)
xx[1]
xxx<-round(xx,1)
hist(round(xxx,1),breaks=10000)
xxx[1]
hist(round(xx,1)/18,breaks=10000)
hist(round(round(xx,1)/18,1),breaks=10000)
hist(round(round(xx,0)/18,1),breaks=10000)
7000/30
245*31
246*31
247*31
248*31
249*31
250*31
251*31
252*31
7456/31
7456/32
7456/33
7456/34
7456/35
7456/36
7456/37
7456/38
7456/39
200*39
4622 + 385 + 3873
3873+385
setwd("~/R/GlCoSy/dataForSubmissions/attd2017")
library(data.table)
library(survival)
#s
tempWriteFile <- paste("../GlCoSy/source/admissionDataDT_T1DM_hba1cRevision.csv",sep=""); reportingDF<-read.csv(tempWriteFile); reportingDF<-data.table(reportingDF); diabetesType="Type 1 Diabetes. "
tempWriteFile <- paste("./admissionDataDT_T1DM.csv",sep=""); reportingDF<-read.csv(tempWriteFile); reportingDF<-data.table(reportingDF); diabetesType="Type 1 Diabetes. "
#
reportingDF$eAGyyyyDiff<-reportingDF$eAG-reportingDF$yyyy
# reportingDF$eAGyyyyDiff_inFrame<-reportingDF$eAG_inFrame-reportingDF$yyyy
reportingDF$AGN2<-reportingDF$eAG-reportingDF$medianFirst2CBGs
reportingDF$AGN3<-reportingDF$eAG-reportingDF$medianFirst3CBGs
#
reportingDF$AGN4<-reportingDF$eAG-reportingDF$medianFirst4CBGs
reportingDF$hypo<-ifelse(reportingDF$ID_ADMISSIONhypoEpisodes4.60>0,1,0)
#####################################################################################################
## apply conditions for all analyses
plotReportingDF<-subset(reportingDF,nCBGperAdmission>=2)   # for admisisons: remove single CBG admissions
plotReportingDF<-subset(plotReportingDF,nHbA1cValuesInFrame>0)  # for HbA1c perior: remove those without a CBG in 15 month window
plotReportingDF<-data.table(plotReportingDF)
boxplot(plotReportingDF$IQR ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs last measured HbA1c (x axis)")
plot(plotReportingDF$lastHbA1cInFrame,plotReportingDF$IQR)
cor.test(plotReportingDF$lastHbA1cInFrame,plotReportingDF$IQR)
abline(lm(plotReportingDF$IQR ~ plotReportingDF$lastHbA1cInFrame),col="red")
attdAbstractIQR<-boxplot(plotReportingDF$IQR ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs AGN ATTD abstract 1 (x axis)")
attdAbstractIQRdecile<-boxplot(plotReportingDF$IQR ~cut(plotReportingDF$eAGyyyyDiff,breaks=quantile(plotReportingDF$eAGyyyyDiff, prob = seq(0, 1, length = 11), type = 5)),plot=T,main="IQR vs AGN ATTD abstract 1 (x axis)",las=3)
cut(plotReportingDF$eAGyyyyDiff,breaks=quantile(plotReportingDF$eAGyyyyDiff, prob = seq(0, 1, length = 11), type = 5))
boxplot(plotReportingDF$IQR ~ cut(sqrt(plotReportingDF$eAGyyyyDiff^2),breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs last measured HbA1c (x axis)")
for (i in seq(2,20,1)) {
x<-boxplot(subset(plotReportingDF,nCBGperAdmission==i)$IQR ~ cut(subset(plotReportingDF,nCBGperAdmission==i)$lastHbA1cInFrame,breaks=seq(30,200,5)),las=3,varwidth=T,ylim=c(0,10),plot=F)
if (i==4) {plot(log(c(1:20)),x$stats[3,1:20],ylim=c(0,10),pch=16,cex=3*(sqrt(x$n))/max(sqrt(x$n)),col=i,main="IQR vs log last measured HbA1c. each line represents an admission with n CBGs. point size corresponding to number of values\nthis controls for the issue of IQR increasing with increasing numbers of CBGs measured during an admission")
lines(log(c(1:20)),x$stats[3,1:20],col=i,lwd=2)
}
if (i>4)  {points(log(c(1:20)),x$stats[3,1:20],pch=16,cex=3*(sqrt(x$n))/max(sqrt(x$n)),col=i)
lines(log(c(1:20)),x$stats[3,1:20],col=i,lwd=2)
}
}
attdAbstractHYD<-boxplot(subset(plotReportingDF,admissionDurationDays>1)$hypoEpPerDay ~ cut(subset(plotReportingDF,admissionDurationDays>1)$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,1),plot=T,main="IQR vs AGN ATTD abstract 1 (x axis)")
plotReportingDF$hypoEpPerDay<-plotReportingDF$ID_ADMISSIONhypoEpisodes4.60 / plotReportingDF$admissionDurationDays
attdAbstractHYD<-boxplot(subset(plotReportingDF,admissionDurationDays>1)$hypoEpPerDay ~ cut(subset(plotReportingDF,admissionDurationDays>1)$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,1),plot=T,main="IQR vs AGN ATTD abstract 1 (x axis)")
attdAbstractHYD<-boxplot(subset(plotReportingDF,admissionDurationDays>1 & yyyy>3.9)$hypoEpPerDay ~ cut(subset(plotReportingDF,admissionDurationDays>1 & yyyy>3.9)$eAGyyyyDiff,breaks=10),las=3,varwidth=T,ylim=c(0,1),plot=T,main="IQR vs AGN ATTD abstract 1 (x axis)")
# plot episodes/day
#sequencePlotSet<-subset(plotReportingDF,admissionDurationDays>4)
sequencePlotSet<-plotReportingDF
sequence<-seq(-30,30,2)
epDayMatrix<-as.data.frame(matrix(0,nrow=length(sequence),ncol=4));colnames(epDayMatrix)<-c("AGNlow","AGNhigh","hypEps","admisssonDuration")
epDayMatrix$AGNlow<-sequence; epDayMatrix$AGNhigh[1:nrow(epDayMatrix)-1]<-epDayMatrix$AGNlow[2:nrow(epDayMatrix)]; epDayMatrix$AGNhigh[nrow(epDayMatrix)]<-100
for (i in seq(1,length(sequence),1)) {
subsetFrame<-subset(sequencePlotSet,eAGyyyyDiff>epDayMatrix$AGNlow[i] & eAGyyyyDiff<=epDayMatrix$AGNhigh[i])
epDayMatrix$hypEps[i]<-sum(subsetFrame$ID_ADMISSIONhypoEpisodes4.60)
epDayMatrix$admisssonDuration[i]<-sum(subsetFrame$admissionDurationDays)
}
epDayMatrix$ratio<-epDayMatrix$hypEps/epDayMatrix$admisssonDuration
epDayMatrix_nMoreThan100<-subset(epDayMatrix,hypEps>100)
for (j in seq(1,nrow(epDayMatrix_nMoreThan100),1)) {
epDayMatrix_nMoreThan100$propTestP[j]<-prop.test(c(epDayMatrix_nMoreThan100$hypEps[j],1082),c(epDayMatrix_nMoreThan100$admisssonDuration[j],7.733240e+03))$p.value
}
plot(epDayMatrix_nMoreThan100$AGNlow,epDayMatrix_nMoreThan100$ratio,main="AGN vs hypo episodes per day for all admissions")
lines(epDayMatrix_nMoreThan100$AGNlow,epDayMatrix_nMoreThan100$ratio,main="AGN vs hypo episodes per day for all admissions")
epDayMatrix_nMoreThan100[1,]
epDayMatrix_nMoreThan100[1,]
reportingDF[1,]
hist(reportingDF$admissionDurationDays)
hist(reportingDF$admissionDurationDays,breaks=100)
hist(reportingDF$admissionDurationDays,breaks=1000)
hist(reportingDF$admissionDurationDays,breaks=1000,xlim=c(0,10))
min(reportingDF$admissionDurationDays)
quantile(reportingDF$admissionDurationDays)
tempWriteFile <- paste("./admissionDataDT_T1DM.csv",sep=""); reportingDF<-read.csv(tempWriteFile); reportingDF<-data.table(reportingDF); diabetesType="Type 1 Diabetes. "
dim(reportingDF)
reportingDF$eAGyyyyDiff<-reportingDF$eAG-reportingDF$yyyy
# reportingDF$eAGyyyyDiff_inFrame<-reportingDF$eAG_inFrame-reportingDF$yyyy
reportingDF$AGN2<-reportingDF$eAG-reportingDF$medianFirst2CBGs
reportingDF$AGN3<-reportingDF$eAG-reportingDF$medianFirst3CBGs
#
reportingDF$AGN4<-reportingDF$eAG-reportingDF$medianFirst4CBGs
reportingDF$hypo<-ifelse(reportingDF$ID_ADMISSIONhypoEpisodes4.60>0,1,0)
#####################################################################################################
## apply conditions for all analyses
plotReportingDF<-subset(reportingDF,nCBGperAdmission>=2)   # for admisisons: remove single CBG admissions
plotReportingDF<-subset(plotReportingDF,nHbA1cValuesInFrame>0)  # for HbA1c perior: remove those without a CBG in 15 month window
plotReportingDF<-data.table(plotReportingDF)
dim(reportingDF)
min(reportingDF$nCBGperAdmission)
dim(plotReportingDF)
hist(plotReportingDF$admissionDurationDays)
quantile(plotReportingDF$admissionDurationDays)
subset(plotReportingDF$admissionDurationDays==0)
subset(plotReportingDF, admissionDurationDays==0)
tempWriteFile <- paste("./admissionDataDT_T1DM.csv",sep=""); reportingDF<-read.csv(tempWriteFile); reportingDF<-data.table(reportingDF); diabetesType="Type 1 Diabetes. "
length(unique(reportingDF$ID))
sum(reportingDF$nCBGperAdmission)
reportingDF$eAGyyyyDiff<-reportingDF$eAG-reportingDF$yyyy
# reportingDF$eAGyyyyDiff_inFrame<-reportingDF$eAG_inFrame-reportingDF$yyyy
reportingDF$AGN2<-reportingDF$eAG-reportingDF$medianFirst2CBGs
reportingDF$AGN3<-reportingDF$eAG-reportingDF$medianFirst3CBGs
#
reportingDF$AGN4<-reportingDF$eAG-reportingDF$medianFirst4CBGs
reportingDF$hypo<-ifelse(reportingDF$ID_ADMISSIONhypoEpisodes4.60>0,1,0)
sum(reportingDF$hypo)
x <- ifelse(reportingDF$minGlu<4,1,0)
sum(x)
x <- ifelse(reportingDF$minGlu<3,1,0)
sum(x)
#####################################################################################################
## apply conditions for all analyses
plotReportingDF<-subset(reportingDF,nCBGperAdmission>=2)   # for admisisons: remove single CBG admissions
dim(plotReportingDF)
tempWriteFile <- paste("./admissionDataDT_T1DM.csv",sep=""); reportingDF<-read.csv(tempWriteFile); reportingDF<-data.table(reportingDF); diabetesType="Type 1 Diabetes. "
dim(reportingDF)
reportingDF$eAGyyyyDiff<-reportingDF$eAG-reportingDF$yyyy
# reportingDF$eAGyyyyDiff_inFrame<-reportingDF$eAG_inFrame-reportingDF$yyyy
reportingDF$AGN2<-reportingDF$eAG-reportingDF$medianFirst2CBGs
reportingDF$AGN3<-reportingDF$eAG-reportingDF$medianFirst3CBGs
#
reportingDF$AGN4<-reportingDF$eAG-reportingDF$medianFirst4CBGs
reportingDF$hypo<-ifelse(reportingDF$ID_ADMISSIONhypoEpisodes4.60>0,1,0)
dim(reportingDF)
plotReportingDF<-subset(reportingDF,nCBGperAdmission>=2)   # for admisisons: remove single CBG admissions
dim(plotReportingDF)
plotReportingDF<-subset(plotReportingDF,nHbA1cValuesInFrame>0)  # for HbA1c perior: remove those without a CBG in 15 month window
dim(plotReportingDF)
plotReportingDF<-data.table(plotReportingDF)
boxplot(plotReportingDF$IQR ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs last measured HbA1c (x axis)")
setwd("~/R/_workingDirectory/data_and_presentations_submissions/attd_2017_paris")
library(data.table)
library(survival)
#source("./_T1DM_hba1c_admissionAndMortality.R")
#####################################################################################################
#####################################################################################################
## read in diabetes / hba1c prediction data, analyse and plot
#####################################################################################################
#####################################################################################################
###### type 1
#
#
tempWriteFile <- paste("~/R/GlCoSy/dataForSubmissions/attd2017/admissionDataDT_T1DM.csv",sep=""); reportingDF<-read.csv(tempWriteFile); reportingDF<-data.table(reportingDF); diabetesType="Type 1 Diabetes. "
#
reportingDF$eAGyyyyDiff<-reportingDF$eAG-reportingDF$yyyy
# reportingDF$eAGyyyyDiff_inFrame<-reportingDF$eAG_inFrame-reportingDF$yyyy
reportingDF$AGN2<-reportingDF$eAG-reportingDF$medianFirst2CBGs
reportingDF$AGN3<-reportingDF$eAG-reportingDF$medianFirst3CBGs
#
reportingDF$AGN4<-reportingDF$eAG-reportingDF$medianFirst4CBGs
reportingDF$hypo<-ifelse(reportingDF$ID_ADMISSIONhypoEpisodes4.60>0,1,0)
#####################################################################################################
## apply conditions for all analyses
plotReportingDF<-subset(reportingDF,nCBGperAdmission>=2)   # for admisisons: remove single CBG admissions
plotReportingDF<-subset(plotReportingDF,nHbA1cValuesInFrame>0)  # for HbA1c perior: remove those without a CBG in 15 month window
plotReportingDF<-data.table(plotReportingDF)
boxplot(plotReportingDF$IQR ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs last measured HbA1c (x axis)")
plot(plotReportingDF$lastHbA1cInFrame,plotReportingDF$IQR)
cor.test(plotReportingDF$lastHbA1cInFrame,plotReportingDF$IQR)
abline(lm(plotReportingDF$IQR ~ plotReportingDF$lastHbA1cInFrame),col="red")
attdAbstractIQR<-boxplot(plotReportingDF$IQR ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs AGN ATTD abstract 1 (x axis)")
boxplot(plotReportingDF$IQR ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs last measured HbA1c (x axis)")
attdAbstractIQRdecile<-boxplot(plotReportingDF$IQR ~cut(plotReportingDF$eAGyyyyDiff,breaks=quantile(plotReportingDF$eAGyyyyDiff, prob = seq(0, 1, length = 11), type = 5)),plot=T,main="IQR vs AGN ATTD abstract 1 (x axis)",las=3)
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,20),plot=T,main="IQR vs last measured HbA1c (x axis)")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(1,10),plot=T,main="admission minimum glucose vs most recent HbA1c value")
length(unique(plotReportingDF$ID))
boxplot(plotReportingDF$IQR ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs last measured HbA1c (x axis)")
boxplot(plotReportingDF$medianGlu ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,20),plot=T,main="IQR vs last measured HbA1c (x axis)")
boxplot(plotReportingDF$medianGlu ~ cut(sqrt(plotReportingDF$eAGyyyyDiff^2),breaks=seq(0,30,1)),las=3,varwidth=T,ylim=c(0,20),plot=T,main="IQR vs last measured HbA1c (x axis)")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(1,10),plot=T,main="admission minimum glucose vs most recent HbA1c value")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,20),plot=T,main="IQR vs last measured HbA1c (x axis)")
plot(plotReportingDF$eAGyyyyDiff, plotReportingDF$minGlu)
plot(plotReportingDF$eAGyyyyDiff, plotReportingDF$minGlu, pch=16, cex=0.3)
plot(plotReportingDF$eAGyyyyDiff, plotReportingDF$minGlu, pch=16, cex=0.4)
boxplot(plotReportingDF$maxGlu ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(10,28),plot=T,main="admission maximum glucose vs most recent HbA1c value")
boxplot(plotReportingDF$maxGlu ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,20),plot=T,main="IQR vs last measured HbA1c (x axis)")
boxplot(plotReportingDF$maxGlu ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(5,28),plot=T,main="IQR vs last measured HbA1c (x axis)")
boxplot(plotReportingDF$medianGlu ~ cut(sqrt(plotReportingDF$eAGyyyyDiff^2),breaks=seq(0,30,1)),las=3,varwidth=T,ylim=c(0,20),plot=T,main="IQR vs last measured HbA1c (x axis)")
boxplot(plotReportingDF$minGlu ~ cut(sqrt(plotReportingDF$eAGyyyyDiff^2),breaks=seq(0,30,1)),las=3,varwidth=T,ylim=c(0,20),plot=T,main="IQR vs last measured HbA1c (x axis)")
boxplot(plotReportingDF$minGlu ~ cut(sqrt(plotReportingDF$eAGyyyyDiff^2),breaks=seq(0,30,1)),las=3,varwidth=T,ylim=c(0,8),plot=T,main="IQR vs last measured HbA1c (x axis)")
boxplot(plotReportingDF$minGlu ~ cut(sqrt(plotReportingDF$eAGyyyyDiff^2),breaks=seq(0,30,1)),las=3,varwidth=T,ylim=c(0,8),plot=T,main="minGlu vs distance from AGN==0 (x axis)")
plotsqrt(plotReportingDF$eAGyyyyDiff^2), plotReportingDF$minGlu)
plotsqrt(plotReportingDF$eAGyyyyDiff^2, plotReportingDF$minGlu)
plot(sqrt(plotReportingDF$eAGyyyyDiff^2), plotReportingDF$minGlu)
plot(sqrt(plotReportingDF$eAGyyyyDiff^2), plotReportingDF$minGlu)
fit <- lm(plotReportingDF$minGlu ~ sqrt(plotReportingDF$eAGyyyyDiff^2))
abline(fit, col="red")
plot(log(sqrt(plotReportingDF$eAGyyyyDiff^2)), plotReportingDF$minGlu)
fit <- lm(plotReportingDF$minGlu ~ log(sqrt(plotReportingDF$eAGyyyyDiff^2)))
abline(fit, col="red")
plot(sqrt(plotReportingDF$eAGyyyyDiff^2), plotReportingDF$minGlu)
fit <- lm(plotReportingDF$minGlu ~ sqrt(plotReportingDF$eAGyyyyDiff^2))
abline(fit, col="red")
fit
plot(sqrt(plotReportingDF$eAGyyyyDiff^2), plotReportingDF$minGlu, ylim=c(0,10))
fit <- lm(plotReportingDF$minGlu ~ sqrt(plotReportingDF$eAGyyyyDiff^2))
abline(fit, col="red")
plot(sqrt(plotReportingDF$eAGyyyyDiff^2), plotReportingDF$minGlu, ylim=c(0,10))
plot(sqrt(plotReportingDF$eAGyyyyDiff^2), log(plotReportingDF$minGlu))
plot(log(sqrt(plotReportingDF$eAGyyyyDiff^2)), log(plotReportingDF$minGlu))
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,20),plot=T,main="minGlu vs AGN (x axis)")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,20),plot=T,main="minGlu vs AGN (x axis)", ylim=c(0,15))
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,15),plot=T,main="minGlu vs AGN (x axis)")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="minGlu vs AGN (x axis)")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(1,10),plot=T,main="admission minimum glucose vs most recent HbA1c value")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$yyyy,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(1,10),plot=T,main="admission minimum glucose vs most recent HbA1c value")
plotReportingDF$yyyy
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$yyyy,breaks=seq(30,200,10))
)
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$yyyy,breaks=seq(1,28,1)),las=3,varwidth=T,ylim=c(1,10),plot=T,main="admission minimum glucose vs first CBG value")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$yyyy,breaks=seq(1,28,0.1)),las=3,varwidth=T,ylim=c(1,10),plot=T,main="admission minimum glucose vs first CBG value")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$yyyy,breaks=seq(1,28,1)),las=3,varwidth=T,ylim=c(1,10),plot=T,main="admission minimum glucose vs first CBG value")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(1,10),plot=T,main="admission minimum glucose vs most recent HbA1c value")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="minGlu vs AGN (x axis)")
boxplot(plotReportingDF$minGlu ~ cut(sqrt(plotReportingDF$eAGyyyyDiff^2),breaks=seq(0,30,1)),las=3,varwidth=T,ylim=c(0,8),plot=T,main="minGlu vs distance from AGN==0 (x axis)")
boxplot(plotReportingDF$minGlu ~ cut(plotReportingDF$yyyy,breaks=seq(1,28,1)),las=3,varwidth=T,ylim=c(1,10),plot=T,main="admission minimum glucose vs first CBG value")
for (i in seq(2,20,1)) {
x<-boxplot(subset(plotReportingDF,nCBGperAdmission==i)$IQR ~ cut(subset(plotReportingDF,nCBGperAdmission==i)$lastHbA1cInFrame,breaks=seq(30,200,5)),las=3,varwidth=T,ylim=c(0,10),plot=F)
if (i==4) {plot(log(c(1:20)),x$stats[3,1:20],ylim=c(0,10),pch=16,cex=3*(sqrt(x$n))/max(sqrt(x$n)),col=i,main="IQR vs log last measured HbA1c. each line represents an admission with n CBGs. point size corresponding to number of values\nthis controls for the issue of IQR increasing with increasing numbers of CBGs measured during an admission")
lines(log(c(1:20)),x$stats[3,1:20],col=i,lwd=2)
}
if (i>4)  {points(log(c(1:20)),x$stats[3,1:20],pch=16,cex=3*(sqrt(x$n))/max(sqrt(x$n)),col=i)
lines(log(c(1:20)),x$stats[3,1:20],col=i,lwd=2)
}
}
admissionDbox<-boxplot(plotReportingDF$admissionDurationDays ~ cut(plotReportingDF$lastHbA1cInFrame,breaks=seq(30,200,10)),las=3,varwidth=T,ylim=c(0,5),plot=T,main="admission duration vs last measured HbA1c value. increments of 10mmol/mol")
admissionDboxAGN<-boxplot(plotReportingDF$admissionDurationDays ~ cut(plotReportingDF$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs last measured HbA1c (x axis)")
attdAbstractLOS<-boxplot(subset(plotReportingDF,admissionDurationDays>0.2)$admissionDurationDays ~ cut(subset(plotReportingDF,admissionDurationDays>0.2)$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="LOS vs AGN ATTD abstract 1 (x axis)")
attdAbstractLOSdecile<-boxplot(subset(plotReportingDF,admissionDurationDays>1)$admissionDurationDays ~cut(subset(plotReportingDF,admissionDurationDays>1)$eAGyyyyDiff,breaks=quantile(plotReportingDF$eAGyyyyDiff, prob = seq(0, 1, length = 11), type = 5)),plot=T,main="IQR vs AGN ATTD abstract 1 (x axis)",las=3,ylim=c(0,3))
boxplot(plotReportingDF$admissionDurationDays ~ cut(sqrt(plotReportingDF$eAGyyyyDiff^2),breaks=seq(0,30,1)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="IQR vs last measured HbA1c (x axis)")
attdAbstractLOS<-boxplot(subset(plotReportingDF,admissionDurationDays>0.2)$admissionDurationDays ~ cut(subset(plotReportingDF,admissionDurationDays>0.2)$eAGyyyyDiff,breaks=seq(-30,30,2)),las=3,varwidth=T,ylim=c(0,10),plot=T,main="LOS vs AGN ATTD abstract 1 (x axis)")
